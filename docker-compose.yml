version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: hotel_booking
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres-postgres-init.sql:/docker-entrypoint-initdb.d/postgres-init.sql
    networks:
      - hotel-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - hotel-network

  mongodb:
    image: mongo:6
    container_name: mongo-db
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - hotel-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - hotel-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - hotel-network

  kafka-topics-creator:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    volumes:
      - ./wait-for-kafka.sh:/wait-for-kafka.sh
    entrypoint: [ "/bin/sh", "/wait-for-kafka.sh" ]
    networks:
      - hotel-network

  booking-service:
    build:
      context: ./booking-service
    container_name: booking_service
    depends_on:
      - postgres
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/hotel_booking
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      KAFKA_BROKER: kafka:9092
      SERVER_PORT: 8081
    ports:
      - "8081:8081"
    networks:
      - hotel-network

  payment-service:
    build:
      context: ./payment-service
    container_name: payment_service
    depends_on:
      - mongodb
      - kafka
    environment:
      MONGO_URI: mongodb://mongodb:27017/hotel_payments
      KAFKA_BROKER: kafka:9092
      SERVER_PORT: 8082
    ports:
      - "8082:8082"
    networks:
      - hotel-network

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - booking-service
      - payment-service
    networks:
      - hotel-network
    environment:
      BOOKING_SERVICE_URL: http://booking-service:8081
      PAYMENT_SERVICE_URL: http://payment-service:8082

volumes:
  postgres-data:
  mongo-data:
  kafka-data:

networks:
  hotel-network:
    driver: bridge